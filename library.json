{
    "and syntax":{
        "input":["*:star1","and","*:star2"],
        "priority":0,
        "stack":[
            "Parse:star1",
            "Equals:&star1",
            "Jif:3",
            "Parse:star2",
            "Equals:&star2"
        ]
    },
    "ifthen":{
        "input":["if","*:star1","then","*:star2"],
        "priority":0,
        "stack":[
            "Parse:star1",
            "Jif:2",
            "Parse:star2"
        ]
    },
    "MATH OPERATION":{
        "input":["{NUMBER}:number1","{MATH_OP}:op","{NUMBER}:number2","*:rest"],
        "priority":0,
        "stack":[
            "RefObj:number1",
            "Math:op:number2",
            "Parse:rest"
        ]
    },
    "MATH OPERATION EQUALS NUMBER":{
        "input":["equals","{NUMBER}:number3"],
        "priority":1,
        "stack":[
            "Equals:&number3"
        ]
    },
    "MATH OPERATION EQUALS MORE":{
        "input":["equals","*:number3"],
        "priority":0,
        "stack":[
            "Equals:&number3"
        ]
    },
    "CountdownFromX":{
        "input":["countdown", "from", "{NUMBER}:number"],
        "priority":0,
        "stack":[
            "WriteT:countdown from",
            "WriteV:number",
            "Say:",
            "AddSP:Countdown:&number"
        ]
    },
    "TellMeAJoke-HumorEmittor":{
        "input":["tell", "me" ,"a","joke"],
        "priority":0,
        "stack":[
            "WriteT:sorry my humor emitters are offline",
            "Say:"
        ]
    },
    "TellMeAJoke-SelfDestruct":{
        "input":["tell", "me" ,"a","joke"],
        "priority":0,
        "stack":[
            "WriteT:self destruct sequence activated. t minus 5, 4, 3",
            "Say:"
        ]
    },
    "TellMeAJoke-YouWontHearThisOne":{
        "input":["tell", "me" ,"a","joke"],
        "priority":-1,
        "stack":[
            "WriteT:you wont hear this one",
            "Say:"
        ]
    },
    "Say*":{
        "input":["say","*:star"],
        "priority":0,
        "stack":[
            "WriteV:star",
            "Say:"
        ]
    },
    "WhatISToday":{
        "input":["{Definer_desc}","{Comparator}:comp1","{DAY_REL}:dayrel"],
        "priority":0,
        "stack":[
            "WriteV:dayrel",
            "WriteV:comp1",
            "RefObj:dayrel",
            "LookUpDay:",
            "Write:",
            "Say:"
        ]
    },
    "WhatISTodaysDate":{
        "input":["{Definer_desc}","{Comparator}:comp1","{DAY_REL}:dayrel","date:date"],
        "priority":0,
        "stack":[
            "WriteV:dayrel",
            "WriteV:date",
            "WriteV:comp1",
            "RefObj:dayrel",
            "LookUpDate:",
            "Write:",
            "Say:"
        ]
    },
    "whatisblank":{
        "input":["{Definer_desc}","{Comparator}:comp1","?{Indefinite}:ind1","{THING}:thing"],
        "priority":0,
        "stack":[
            "WriteV:ind1",
            "WriteV:thing",
            "WriteV:comp1",
            "RefObj:thing",
            "LookUp:summary",
            "Write:",
            "Say:"
        ]
    }, 
    "whatisattributeofblank":{
        "input":["{Definer_desc}","{Comparator}:comp1","?{Indefinite}:ind1","{Attribute}:attribute","{Of}","?{Indefinite}:ind2","{THING}:thing"],
        "priority":0,
        "stack":[
            "WriteV:ind1",
            "WriteV:attribute",
            "WriteT:of",
            "WriteV:ind2",
            "WriteV:thing",
            "WriteV:comp1",
            "RefObj:thing",
            "LookUp:attributes",
            "LookUpV:attribute",
            "ParseFact:",
            "Write:",
            "Say:"
        ]
    },
    "PASSINPUT":{
        "input":["*:star"],
        "priority":-1,
        "stack":[
            "RefObj:star"
        ]
    }
}